# vim:ft=tmux

# Disabling these checks. Weren't working well. Will re-evaluate next time I find myself somewhere without modern tmux terminfo.
# Default TERM is screen, otherwise tmux. Then check if 256 colours available.
# # XXX This may be slow and add a second to tmux startup! Take note!
# # With this command we check to see if tmux is in the terminfo database.
# # Grep for '^tmux' to avoid getting a false match from an xterm thing.
# if-shell 'command -v infocmp > /dev/null 2>&1 &&' \
#     'infocmp tmux > /dev/null 2>&1' \
#     'TMUX_TERM="tmux"'
# if-shell '[ -z "$TMUX_TERM" ]' 'TMUX_TERM="screen"'
# display -pv "$TMUX_TERM"
# # set -g default-terminal "$TMUX_TERM"
# # determine if we should enable 256-colour support
# if-shell '[ "$(tput colors)" = "256" ]' 'set -g default-terminal "${TMUX_TERM}-256color"'
# # If not installed, tmux terminfo can be found at
# # https://gist.github.com/antoineco/414624c739fd2c05a2a517caa1de9eff


set-option -g update-environment "SSH_AUTH_SOCK SSH_CONNECTION DISPLAY ${TERMOPTIONS}"
# set-option -g update-environment "SSH_AUTH_SOCK \
#                                   SSH_CONNECTION \
#                                   DISPLAY \
#                                   TERM_PROGRAM \
#                                   USENF \
#                                   USEPF \
#                                   COLORTERM"

# tmux now overrides TERM_PROGRAM. What even uses that??
run-shell 'tmux set-environment -g TERMINAL_PROGRAM $(tmux show-environment -g TERM_PROGRAM | cut -d= -f2)'

# based on https://stackoverflow.com/a/40902312/1046584
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
# TODO possibly have these as their own files if there are too many options per version.
# Then can just source in the version guard, and have normal syntax
# highlighting for the rest.
# This doesn't always seem to get set properly... so I set the env variable
# properly in bash profile anyway.
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# ver < 2.1
if-shell -b '[ "$(printf "%s\n%s" "$TMUX_VERSION" "2.1" | sort -V | head -n1)" = "$TMUX_VERSION" ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
# ver !< 2.1
if-shell -b '[ ! "$(printf "%s\n%s" "$TMUX_VERSION" "2.1" | sort -V | head -n1)" = "$TMUX_VERSION" ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
# ver < 2.2
if-shell -b '[ "$(printf "%s\n%s" "$TMUX_VERSION" "2.2" | sort -V | head -n1)" = "$TMUX_VERSION" ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# Try to attach, else start new session
new-session
set -g history-limit 30000
# So stuff like resizing windows has a longer time-frame
set -g repeat-time 1000

# Define function and export for use in rest of config. Not working.
# set -g default-command "is1LaterVersionThan2(){ \
# [ \"$(echo $1 $2 | tr ' ' '\\n' | sort -V | head -n1)\" = $2 ] } \
# ${SHELL} -l"
set -g default-command "${SHELL} -l"

# Use -s to set for server - ie new connections.
# For xterm cursor changes for blinking block and line. Works for kitty.
set -sa terminal-overrides ',xterm*:Ss=\E[%p1%d q:Se=\E[2 q,'
# Truecolor/colour overrides.
set -sa terminal-overrides ',*-256color:Tc,*-kitty:Tc'
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.3" | bc)" = 1 ]' \
#     "set -sa terminal-overrides ',*-256color:Tc,*-kitty:Tc'"

# Don't have to stretch to the 0
set -g base-index 1
set -g pane-base-index 1

# Set window title on startup only
set-option -g set-titles on
set-option -g set-titles-string "#T"
# rename-window 

# Allows tmux to monitor for comman­d/p­rocess exits
setw -g monitor-activity on
# When a command exits in a non-active window, visually change the tab list to reflect that
set -g visual-activity on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# The effect of this is that when the output of the inner terminal exceeds the terminal’s height it is allowed to spill over into the outer terminal’s scrollback history. So long as you don’t change windows within the tmux session you can use the scrollbar of your local terminal to review the history.
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# set -g set-titles on
# set -g set-titles-string "#T"

# Change cursor in vim to distinguish between insert and command mode AND OTHER COLOR STUFF!
#  set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'
