# vim:fileencoding=utf-8:ft=conf:foldmethod=marker:foldmarker={[},{]}
#
#: Prefix used for all kitty actions
# kitty_mod cmd
kitty_mod ctrl+shift
# All mappings should use kitty_mod+k> to use it as a prefix

#: Clear default shortcuts
clear_all_shortcuts yes

map ctrl+shift+c copy_to_clipboard
map ctrl+shift+v paste_from_clipboard
map cmd+c copy_to_clipboard
map cmd+v paste_from_clipboard

map page_up   scroll_page_up
map page_down scroll_page_down
map kitty_mod+k>v         show_scrollback

map kitty_mod+k>e new_window_with_cwd
map kitty_mod+k>n new_os_window
map cmd+n       new_os_window
map kitty_mod+k>x close_window
map kitty_mod+k>ctrl+l next_window
map kitty_mod+k>ctrl+h previous_window
map kitty_mod+k>Shift+H move_window_backward
map kitty_mod+k>Shift+L move_window_forward
map kitty_mod+k>r start_resizing_window


map kitty_mod+k>right next_tab
map kitty_mod+k>left next_tab
map ctrl+tab        next_tab
map ctrl+shift+tab  previous_tab
map kitty_mod+k>t     new_tab
map kitty_mod+k>shift+T     close_tab
map kitty_mod+k>shift+. move_tab_forward
map kitty_mod+k>shift+, move_tab_backward

map kitty_mod+k>l next_layout

# Plus and minus (equals is shift +)
map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+minus     change_font_size all -2.0

map kitty_mod+k>f>f kitten hints
map kitty_mod+k>f>shift+f kitten hints --type path
map kitty_mod+k>f>l kitten hints --type line --program -
map kitty_mod+k>f>w kitten hints --type word --program -
map kitty_mod+k>f>h kitten hints --type hash --program -
map kitty_mod+k>f>x kitten hints --type path --program -


# {[} Documentation
#: For a list of key names, see: GLFW keys
#: <http://www.glfw.org/docs/latest/group__keys.html>. The name to use
#: is the part after the GLFW_KEY_ prefix. For a list of modifier
#: names, see: GLFW mods
#: <http://www.glfw.org/docs/latest/group__mods.html>

#: On Linux you can also use XKB key names to bind keys that are not
#: supported by GLFW. See XKB keys
#: <https://github.com/xkbcommon/libxkbcommon/blob/master/xkbcommon/xkbcommon-
#: keysyms.h> for a list of key names. The name to use is the part
#: after the XKB_KEY_ prefix. Note that you should only use an XKB key
#: name for keys that are not present in the list of GLFW keys.

#: Finally, you can use raw system key codes to map keys. To see the
#: system key code for a key, start kitty with the kitty --debug-
#: keyboard option. Then kitty will output some debug text for every
#: key event. In that text look for $()native_code$() the value of that
#: becomes the key name in the shortcut. For example:

#: .. code-block:: none

#:     on_key_input: glfw key: 65 native_code: 0x61 action: PRESS mods: 0x0 text: 'a'

#: Here, the key name for the A key is 0x61 and you can use it with::

#:     map ctrl+0x61 something

#: to map ctrl+a to something.

#: You can use the special action no_op to unmap a keyboard shortcut
#: that is assigned in the default configuration.

#: You can combine multiple actions to be triggered by a single
#: shortcut, using the syntax below::

#:     map key combine <separator> action1 <separator> action2 <separator> action3 ...

#: For example::

#:     map kitty_mod+e combine : new_window : next_layout

#: this will create a new window and switch to the next available
#: layout

#: You can use multi-key shortcuts using the syntax shown below::

#:     map key1>key2>key3 action

#: For example::

#:     map ctrl+f>2 set_font_size 20

#: cmd appears to do nothing when not on osx, so use duplicates. Eg:
# map cmd+c        copy_to_clipboard
# map kitty_mod+c  copy_to_clipboard
#{]}
