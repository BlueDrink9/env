# remap prefix
unbind C-b
set-option -g prefix C-s
bind-key C-s send-prefix

# run "echo $(cd $BASH_SOURCE && pwd)"
# run "echo $(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
# SCRIPTDIR=run "echo $( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )"
# run "echo $SCRIPTDIR"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind -n S-Up  switch-client -p
bind -n S-Down switch-client -n

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# based on https://stackoverflow.com/a/40902312/1046584
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"


# # In version 2.1 "mouse" replaced the previous 4 mouse options
# # Allows scrolling, etc
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
#   "set -g mouse on"
# if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
#     'set-window-option -g mode-mouse on; set -g mouse-select-pane on;
#     \ set -g mouse-resize-pane on; set -g mouse-select-window on'

# # UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
# if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
#   "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"


# New keybindings for vi-mode
# https://github.com/tmux/tmux/issues/754
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
   'bind -T copy-mode-vi v send-keys -X begin-selection ; \
   bind -T copy-mode-vi C-v send-keys -X rectangle-toggle ; \
   bind -T copy-mode-vi y send-keys -X copy-selection ; \
   bind -T copy-mode-vi H send-keys -X start-of-line ; \
   bind -T copy-mode-vi L send-keys -X end-of-line ; \
   bind -T choice-mode-vi h send-keys -X tree-collapse ; \
   bind -T choice-mode-vi l send-keys -X tree-expand ; \
   bind -T choice-mode-vi H send-keys -X tree-collapse-all ; \
   bind -T choice-mode-vi L send-keys -X tree-expand-all ; \
   bind -T copy-mode-emacs MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"; \
   bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"; ' \
   'bind -t vi-copy v begin-selection; \
   bind -t vi-copy C-v rectangle-toggle; \
   bind -t vi-copy y copy-selection; \
   bind -t vi-choice h tree-collapse; \
   bind -t vi-choice l tree-expand; \
   bind -t vi-choice H tree-collapse-all; \
   bind -t vi-choice L tree-expand-all; \
   bind -t emacs-copy MouseDragEnd1Pane copy-pipe "pbcopy"; \
   bind -t vi-copy MouseDragEnd1Pane copy-pipe "pbcopy";'

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel

# Try to attach, else start new session
new-session
set -g history-limit 30000

# Solve funky colours in vim
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Surround the active pane with a specific color for easier identification
set -g pane-active-border-style fg=green
set -g pane-active-border-fg green
set -g pane-active-border-style bg=default
set -g pane-active-border-bg default
# darker bg for inactive panes.
# set -g window-style 'fg=black,bg=colour253'
# set -g window-active-style 'fg=default,bg=default'
# set -g window-active-style 'fg=colour234,bg=colour231'
# Allows tmux to monitor for comman­d/p­rocess exits
setw -g monitor-activity on
# When a command exits in a non-active window, visually change the tab list to reflect that
set -g visual-activity on

# The effect of this is that when the output of the inner terminal exceeds the terminal’s height it is allowed to spill over into the outer terminal’s scrollback history. So long as you don’t change windows within the tmux session you can use the scrollbar of your local terminal to review the history.
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
#bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
#bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

set -g set-titles on
set -g set-titles-string "#T"

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9



# http://stahlke.org/dan/tmux-nested/
# send prefix to currently active nested tmux.
# Operation goes like this: press Shift-Up and you will be controlling the inner (remote) tmux, press Shift-Down to control the outer one. The status line changes color to indicate which is active, although the colors aren't correct until the first time you press Shift-Up.Operation goes like this: press Shift-Up and you will be controlling the inner (remote) tmux, press Shift-Down to control the outer one. The status line changes color to indicate which is active, although the colors aren't correct until the first time you press Shift-Up.
# unbind C-b
# set -g prefix C-a

set -g status-bg colour40
setw -g window-status-current-bg colour40

bind -n C-t new-window -a
bind -n S-left  prev
bind -n S-right next
bind -n S-C-left  swap-window -t -1
bind -n S-C-right swap-window -t +1

bind -n M-F11 set -qg status-bg colour25
bind -n M-F12 set -qg status-bg colour40
bind -n S-up \
    send-keys M-F12 \; \
    set -qg status-bg colour25 \; \
    unbind -n S-left \; \
    unbind -n S-right \; \
    unbind -n S-C-left \; \
    unbind -n S-C-right \; \
    unbind -n C-t \; \
    set -qg prefix C-a
bind -n S-down \
    send-keys M-F11 \; \
    set -qg status-bg colour40 \; \
    bind -n S-left  prev \; \
    bind -n S-right next \; \
    bind -n S-C-left swap-window -t -1 \; \
    bind -n S-C-right swap-window -t +1 \; \
    bind -n C-t new-window -a -c "#{pane_current_path}" \; \
    set -qg prefix C-b


# Change cursor in vim to distinguish between insert and command mode AND OTHER COLOR STUFF!
#  set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'



# Keep at bottom
source "${DOTFILES_DIR}/terminal/plugins_tmux.conf"
# source ${SCRIPTDIR}/plugins_tmux.conf
