# vim:ft=sxhkd
#

# terminal emulator
ctrl + alt + t
	kitty

ctrl + alt + b
	google-chrome-stable

ctrl + alt + e
	dolphin

super + v
    gvim

# program launcher
super + @space
	dmenu_run
super + r
	dmenu_run

# make sxhkd reload its configuration files:
super + w; super + c
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# Mouse bindings
~button1
    bspc pointer -g focus
super + button{1-3}
    bspc pointer -g {move,resize_side,resize_corner}
# super + !button{1-3}
#     bspc pointer -t %i %i
# super + @button{1-3}
#     bspc pointer -u

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }x
	bspc node -{c,k}

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#----------------------------------------
# state/flags
#----------------------------------------

# alternate between the tiled and monocle layout
super + shift + m
	bspc desktop -l next
# Toggle floating mode for current window
super + w: h
	bspc node -t '~floating'

# set the window state
super + w: shift + {t,ctrl + t,h,m}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}
super + w: p
	bspc node -g sticky

#----------------------------------------
# focus/swap
#----------------------------------------

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
/* super + {_,shift + }c */
/* 	bspc node -f {next,prev}.local */
alt + {_,shift + }tab
  node -f {next,prev}.local
super + {_,shift + }tab
  node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
# Destroys the old one if it is empty first.
# See https://blog.codezen.org/2015/03/13/on-bspwm-tweaking/ #Named Desktops to see how to create if no new one found.
{super + bracket{left,right},ctrl + alt + {Left,Right},
  bspc desktop focused -r
	bspc desktop -f {prev,next}.local
super + shift + bracket{left,right}
	bspc node -d {prev,next}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

super + n
    bspc monitor --add-desktops D

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
# Semicolon makes this a prefix, colon makes it a mode (leave with esc).
super + w: shift + {Left,Down,Up,Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + w: ctrl + shift + {Left,Down,Up,Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + w; {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Pseudo-minimize (to desktop "O")
super + z
  D=$(bspc query –desktops –desktop focused); 
  W=$(bspc query –windows –window focused); 
  bspc query –desktops | grep -q “‘$D” || bspc monitor –add-desktops '$D; 
  bspc window $W --to-desktop \'$D

# Restore all minimized windows from this desktop
super + shift + z
  D=$(bspc query –desktops –desktop focused); 
  if bspc query –desktops | grep -q “‘$D”; then 
    for i in $(bspc query –windows –desktop '$D); do 
      bspc window $i –to-desktop $D; 
      bspc window $i –focus; 
      bspc window –swap biggest; 
    done; 
    bspc desktop '$D –remove; 
  fi
