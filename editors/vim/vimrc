set nocompatible
" Automatically create vimfile directories in same location as vimrc
let s:vimrcdir = fnamemodify(expand("$MYVIMRC"), ":p:h")
let g:remoteSession = ($SSH_CLIENT != "")

function! CreateVimDir(dir)
    " Version 7.1 doesn't support fnameescape. Used on iOS.
    " Besides, if you're using 7.1, it's because it's a pre-installed default,
    " meaning it's unix, meaning "/" is the right path separator anyway.
    if v:version >= 703
        let l:dir = fnameescape(expand('/' . a:dir))
    else
        let l:dir = expand('/' . a:dir)
    endif
    if filewritable(s:vimrcdir) && !isdirectory(s:vimrcdir . l:dir)
        silent exec "call mkdir(\"" . s:vimrcdir . l:dir . "\")"
    endif
    return s:vimrcdir . l:dir
endfunction
call CreateVimDir("vimfiles")

" Folder in which current script resides:
if v:version >= 703
    let s:scriptpath = fnameescape(expand('<sfile>:p:h'))
else
    let s:scriptpath = expand('<sfile>:p:h')
endif

function! SourceCustoms(...)
    for vimfile in a:000
        " Converts the path properly for win or unix
        exec 'source ' . s:scriptpath . expand('/' . vimfile)
    endfor
endfunction

" These settings affect what plugins are loaded, plus a couple of settings.
" Set here to ensure consistency.
if exists("g:liteMode") && g:liteMode==1
    let g:ideMode=0
endif
if exists("g:ideMode") && g:ideMode==1
    let g:liteMode=0
endif

exec SourceCustoms("functions.vim", "settings.vim", "plugins.vim", "mappings.vim")
