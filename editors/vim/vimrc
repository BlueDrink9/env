" Folder in which current script resides:
let s:scriptpath = fnameescape(expand('<sfile>:p:h'))

function! SourceCustoms(...)
    for vimfile in a:000
        " Converts the path properly for win or unix
        exec 'source ' . s:scriptpath . expand(vimfile)
    endfor
endfunction

exec SourceCustoms("/functions.vim", "/mappings.vim", "/plugins.vim")

" Show line numbers
set number
" Show cursor coords
set ruler
" Highligh search as you go
set incsearch
" Ignore case in searches excepted if an uppercase letter is used
set smartcase
" Highlight search results. Use :noh to undo
set hlsearch
" Enables some basic mouse input
set mouse=a

syntax on
syntax enable

if has("gui_running")
    " GUI is running or is about to start.
    "   " Maximize gvim window (for an alternative on Windows, see simalt
    "   below).
    set lines=40 columns=120
    set background=light
    colorscheme solarized
    set guifont=Source\ Code\ Pro\ Semibold:h10.5
" else
    " This is console Vim.
    " if exists("+lines")
        " set lines=30
    " endif
    " if exists("+columns")
        " set columns=100
    " endif
endif

set expandtab
set shiftwidth=4
set softtabstop=4
filetype plugin indent on
set modeline
set modelines=5
set wrap
" Linebreak relates to when a line wraps (ie not in a word)
set linebreak
let mapleader = "\<Space>"

" Vertical window splits open on right side
set splitright

" backspace and cursor keys wrap to previous/next line
set backspace=indent,eol,start whichwrap+=<,>,[,]

" No annoying sound on errors
set noerrorbells
" set novisualbell
" set t_vb=
" set tm=500

" Set up default file explorer plugin to be like NERDTree (for using noplugin
" mode).
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25
" Run on startup
" augroup ProjectDrawer
"     autocmd!
"     autocmd VimEnter * :Vexplore
" augroup END

