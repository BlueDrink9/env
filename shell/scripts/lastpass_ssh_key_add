#!/bin/sh
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$SCRIPT_DIR/../functions.sh"
lastpass_login(){
  if ! lpass status > /dev/null; then
    echo "Lastpass is not logged in."
    if [ -z "${LPUSERNAME}" ]; then
      read -r -p "Enter lastpass username \
        (set LPUSERNAME to skip prompt): " LPUSERNAME
    fi
    lpass login "$LPUSERNAME"
  fi
}

# Adds an ssh key to agent, using the passphrase in lastpass.
# Uses the extra note at the end of the .pub as the key name in lastpass.
# If no key files are given as arguments, all keys in ~/.ssh are added.
# lastpass_ssh_key_add(){
  if ! command -v lpass > /dev/null; then
    echo "lastpass-cli not installed."
    ssh-add
    exit
  fi
  if ! command -v ssh > /dev/null; then
    echo "openssh not installed."
    exit
  fi
  if [ -z "$SSH_KEYS_ADDED" ]; then
    pubkeys="$HOME/.ssh/*.pub"
    files="${*-$pubkeys}"
    for keyfile in $files; do
      # Strip .pub from public keys...
      # keyfile="${keyfile%.*}"
      # Backup check to see if key already loaded.
      key="$(cat ${keyfile})"
      # ssh-add -L lists public keys, oops.
      # if ! ssh-add -L | grep -q -- "${key}"; then
      if ! substrInStr "${key}" "$(ssh-add -L)"; then
        # Extract the comment at the end of the pub file
        keyname=$(sed -e 's/[^=]*== //g' < "${keyfile}.pub")
        lastpass_login
        if ! lpass status; then
          echo "Lastpass not logged in. No keys added."
          exit
        fi
        # Note: Indent END with tabs, not spaces, or this won't work.
        expect <<- END
          spawn ssh-add ${keyfile}
          expect "Enter passphrase"
          send "$(lpass show --field=Passphrase SSH/${keyname})\r"
          expect eof
END
        export SSH_KEYS_ADDED=1
      fi
    done
  fi
# }
